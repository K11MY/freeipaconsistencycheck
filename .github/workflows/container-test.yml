name: Container Test and Push

on:
  push:
    branches: [ '**' ]  # Run on all branches
    paths:
      - 'Dockerfile'
      - 'src/**'
      - 'requirements.txt'
      - 'pyproject.toml'
  pull_request:
    paths:
      - 'Dockerfile'
      - 'src/**'
      - 'requirements.txt'
      - 'pyproject.toml'
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build and test container
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build container
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        load: true
        tags: freeipaconsistencycheck:py3.9-test
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          PYTHON_VERSION=3.9
    
    - name: Test container
      run: |        
        # Test that the cipa command works
        docker run --rm freeipaconsistencycheck:py3.9-test --help
        
        # Test a basic cipa command should show output
        docker run --rm freeipaconsistencycheck:py3.9-test
        
        echo "Python 3.9 container built and tested successfully"

  build-and-push-develop:
    name: Build and push develop container
    needs: [build-and-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/freeipaconsistencycheck
        tags: |
          type=sha,format=short
          dev
    
    - name: Build and push develop image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          PYTHON_VERSION=3.9

  promote-to-main:
    name: Promote to Main and Latest
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Retag and push main/latest images
      run: |
        DEV_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/freeipaconsistencycheck:dev"
        
        # Tag with main
        docker pull $DEV_IMAGE
        docker tag $DEV_IMAGE ${{ secrets.DOCKERHUB_USERNAME }}/freeipaconsistencycheck:main
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/freeipaconsistencycheck:main
        
        # Tag with latest
        docker tag $DEV_IMAGE ${{ secrets.DOCKERHUB_USERNAME }}/freeipaconsistencycheck:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/freeipaconsistencycheck:latest